kind: Deployment
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplValues.render" ( dict "value" .Values.commonLabels "scope" $ ) | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ include "common.names.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.strategy }}
  strategy: {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ include "common.names.fullname" . }}
    spec:
      volumes:
      - name: ots-config
        configMap:
          name: {{ printf "%s-config" (include "common.names.fullname" .) }}
      containers:
      - name: onetimesecret
        {{- with .Values.image }}
        image: "{{- if contains ":" .repository -}}{{ .repository }}{{- else -}}{{- if .registry -}}{{ .registry }}/{{- end -}}{{ .repository }}:{{ default $.Chart.AppVersion .tag }}{{- end -}}"
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        {{- if .Values.configuration.host }}
        - name: ONETIMESECRET_HOST
          value: {{ .Values.configuration.host | quote }}
        {{- end }}
        - name: ONETIMESECRET_SSL
          value: {{ ternary "true" "false" .Values.configuration.ssl | quote }}
        {{- if .Values.configuration.redisUrl }}
        - name: ONETIMESECRET_REDIS_URL
          value: {{ .Values.configuration.redisUrl | quote }}
        {{- end }}
        - name: ONETIMESECRET_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "ots.secretName" . }}
              key: {{ template "ots.secretKey" . }}
        ports:
        - containerPort: {{ default .Values.networkPort .Values.containerPort }}
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          tcpSocket:
            port: {{ default .Values.networkPort .Values.livenessProbe.port }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- else if .Values.customLivenessProbe }}
        livenessProbe: {{- toYaml .Values.customLivenessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.readinessProbeEnabled }}
        readinessProbe: {{- toYaml .Values.readinessProbe | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: ots-config
          mountPath: /usr/src/app/etc/config
          subPath: config
