## @section Common parameters

## @param {string} kubeVersion - Override Kubernetes version
##
kubeVersion:
## @param {string} nameOverride - Partially override `names.fullname`
##
nameOverride:
## @param {string} fullnameOverride - Fully override `names.fullname`
##
fullnameOverride:
## @param {object} commonLabels - Labels to add to all deployed objects
##
commonLabels: {}


## @section Lita configuration

configuration:
  ## @param {string} configuration.circleCiHost - CircleCI host that Lita communicates with
  ##
  circleCiHost: "circleci.igg.me"
  ## @param {string} configuration.enableDebug - Enable debugging in Lita
  ## Use "0" to disable and "1" to enable
  ## Defaults to "0" (disabled)
  ##
  enableDebug: ""
  ## @param {string} configuration.circleCiApiToken - CircleCI API token so Lita can communication with CircleCI
  ## This MUST be set to a valid API token, otherwise the Lita pod will fail to start.
  ##
  circleCiApiToken: "CHANGEME"
  ## @param {string} configuration.slackToken - Slack token so Lita can communicate with Slack
  ## This MUST be set to a valid token, otherwise the Lita pod will fail to start.
  ##
  slackToken: "CHANGEME"


## @section Image parameters

## Lita image
## @param {string} image.registry - Lita image registry
## @param {string} image.repository - Lita image repository
## @param {string} image.tag - Lita image tag (immutable tags are recommended)
## @param {string} image.pullPolicy - Lita image pull policy
##
image:
  ## OPTION 1: You can set the entire image repository in one line below
  repository: gcr.io/indiegogo-staging/lita:latest
  ## OPTION 2: You can manage a registry with
  # registry: gcr.io
  # repository: indiegogo-staging/lita

  ## Override the image tag to deploy by setting this variable.
  ## If no value is set, the chart's appVersion will be used.
  # tag: 'latest'

  pullPolicy: IfNotPresent


## @section Deployment parameters

## @param {boolean} environmentIncludeDefault - Include default environment variables
##
environmentIncludeDefault: true
## @param {object} environment - Extra environment variables
## Ex.:
# environment:
#   envVar1: envVarValue1
##
environment: {}
## @param {integer} containerPort - Override the default port (`networkPort`) used in the container
##
containerPort:
## @param {integer} replicaCount - Number of Lita deployment replicas
##
replicaCount: 1
## @param {string} strategy.type - Deployment strategy type
## @param {Object} strategy.rollingUpdate
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
##
strategy:
  ## StrategyType
  ## Can be set to RollingUpdate or Recreate
  ##
  type: RollingUpdate
  rollingUpdate: {}
## Resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## @param {Object} resources.limits - The resources limits for the Lita container
## @param {Object} resources.requests - The requested resources for the Lita container
##
resources:
  requests: {}
  limits: {}
## Lita container liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param {boolean} livenessProbe.enabled - Enable/disable livenessProbe on Lita container
## @param {integer} livenessProbe.port - Set port for the TCP socket livenessProbe (overrides `networkPort`)
## @param {integer} livenessProbe.initialDelaySeconds - Initial delay seconds for livenessProbe
## @param {integer} livenessProbe.periodSeconds - Period seconds for livenessProbe
## @param {integer} livenessProbe.timeoutSeconds - Timeout seconds for livenessProbe
## @param {integer} livenessProbe.successThreshold - Success threshold for livenessProbe
## @param {integer} livenessProbe.failureThreshold - Failure threshold for livenessProbe
##
livenessProbe:
  enabled: true
  port:
  initialDelaySeconds:
  periodSeconds:
  timeoutSeconds:
  successThreshold:
  failureThreshold:
## @param {Object} customLivenessProbe - Custom livenessProbe that overrides the default one
##
customLivenessProbe: {}
## @param {boolean} readinessProbeEnabled - Enable/disable the readinessProbe
##
readinessProbeEnabled: false
## @param {Object} readinessProbe - Set a readinessProbe
##
readinessProbe: {}
## @param {boolean} usePacificTime - Use Pacific time instead of UTC in container
##
usePacificTime: false


## @section Network/service related parameters

## @param {integer} networkPort - Set the port to be used across the OTS container, livenessProbe, service, and ingress
##
networkPort: 8080
## Service parameters
## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
## @param {integer} service.port - Override the default port (`networkPort`) used in the service
## @param {string} service.type - Set the service type
##
service:
  port:
  ## ServiceType
  ## Can be set to ClusterIP, NodePort, LoadBalancer, or ExternalName
  ##
  type: NodePort


## @section Ingress parameters
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/

ingress:
  ## @param {boolean} ingress.enabled - Enable/disable the ingress
  ##
  enabled: true
  tls:
    ## @param {boolean} ingress.tls.enabled - Enable/disable ingress TLS support
    ##
    enabled: false
    ## @param {list} ingress.tls.hosts - Ingress TLS host(s)
    ##
    hosts:
      - example1.com
    ## @param {string} ingress.tls.secretName - Name of the Kubernetes secret to store the TLS certificate
    ## Defaults to the first item in the `ingress.tls.hosts` list with '-tls' appended to the end
    ##
    secretName:
  ## Ingress rules
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
  rules:
    ## @param {list} ingress.rules.hosts - Ingress rules host(s)
    ##
    hosts:
      - host: example1.com
        paths:
          - path: /
            pathType: Exact
            backend:
            service:
              name: my-service-name
              port:
                number: 8080
  ## @param {Object} ingress.customAnnotations - Custom annotations
  ##
  customAnnotations: {}


## @section (Redis) Storage parameters

persistentVolume:
  ## @param {boolean} persistentVolume.enabled - Enable to use an existing Redis persistent disk
  ## If redis.storage.persistentVolumeClaimName is set, a PV will NOT be created even if this is set to true
  ##
  enabled: false
  ## @param {string} persistentVolume.pdName - The existing persistent disk name
  ## This is required, unless you're creating a new Persistent Volume
  ##
  pdName:
  ## @param {string} persistentVolume.reclaimPolicy - Reclamation of the resources
  ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#reclaiming
  ##
  reclaimPolicy: Retain


## @section Redis (chart) parameters

redis:
  ## @param {boolean} redis.chartEnabled - Enable/disable the Redis chart dependency
  ## This is required, unless you're running your own Redis instance
  ##
  chartEnabled: true
  ## @param {string} redis.fullnameOverride - Override the Redis chart name
  ##
  fullnameOverride: "redis"
  ## @param {list} redis.args - Add extra command arguments to the Redis instance
  ##
  args: []

  storage:
    ## @param {string} redis.storage.persistentVolumeClaimName - Set to use an existing Persistent Volume Claim
    ## Because this sets an existing PVC to use, it assumes a PV already exists
    ##
    persistentVolumeClaimName:
    ## @param {string} redis.storage.requestedSize - Persistent Volume Claim/Persistent Volume storage size
    ##
    requestedSize: 10Gi
    ## @param {string} redis.storage.className - Specify the type of storage (standard/ssd)
    ##
    className: "standard"
